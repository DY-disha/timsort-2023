#include <stdio.h>
#include <stdlib.h>

#define MIN_MERGE 32
const int max_size = 1000;


void insertion_sort(int arr[], int left, int right)
{
    for (int i = left + 1; i <= right; i++)
    {
        int temp = arr[i];
        int j = i - 1;
        while (j >= left && arr[j] > temp)
        {
            arr[j + 1] = arr[j];
            j--;
        }
        arr[j + 1] = temp;
    }
}

int min_run_length(int n)
{
    int r = 0;
    while (n >= MIN_MERGE)
    {
        r |= n & 1;
        n >>= 1;
    }
    return n + r;
}

void merge(int arr[], int left, int mid, int right)
{
    int len1 = mid - left + 1, len2 = right - mid;
    int *leftArr = (int*) malloc(len1 * sizeof(int));
    int *rightArr = (int*) malloc(len2 * sizeof(int));

    for (int i = 0; i < len1; i++)
        leftArr[i] = arr[left + i];
    for (int i = 0; i < len2; i++)
        rightArr[i] = arr[mid + 1 + i];

    int i = 0, j = 0, k = left;

    while (i < len1 && j < len2)
    {
        if (leftArr[i] <= rightArr[j])
        {
            arr[k++] = leftArr[i++];
        }
        else
        {
            arr[k++] = rightArr[j++];
        }
    }
    while (i < len1)
    {
        arr[k++] = leftArr[i++];
    }
    while (j < len2)
    {
        arr[k++] = rightArr[j++];
    }
    free(leftArr);
    free(rightArr);
}

void timsort(int arr[], int n)
{
    int minRun = min_run_length(MIN_MERGE);
    printf("MinRun=%d\n",minRun);
    for (int i = 0; i < n; i += minRun)
    {
        insertion_sort(arr, i, fmin(i + minRun - 1, n - 1));
    }
    for (int size = minRun; size < n; size = 2 * size)
    {
        for (int left = 0; left < n; left += 2 * size)
        {
            int mid = left + size - 1;
            int right = fmin(left + 2 * size - 1, n - 1);
            merge(arr, left, mid, right);
        }
    }
}

int main()
{
    const char* filename = "unsorted_data.txt";
    FILE* file = fopen(filename, "r");
    if (file == NULL)
    {
        printf("Error: cannot open file '%s'.\n", filename);
        return 1;
    }

    int arr[max_size];
    int n = 0;
    while (fscanf(file, "%d", &arr[n]) == 1 && n < max_size)
        n++;
    fclose(file);

    timsort(arr, n);

    printf("Sorted array:\n");
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);
    printf("\n");

    return 0;
}
